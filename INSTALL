Copyright (C) 1994, 1995, 1996, 1999, 2000, 2001, 2002 Free Software
Foundation, Inc.

   This file is free documentation; the Free Software Foundation gives
unlimited permission to copy, distribute and modify it.

Basic Installation
==================

   These are general installation instructions.

   The installation for this software is very straight forward.  Just
take the sitetools package directory and copy it to a location on your 
system. Then you can do one of two things.

1) Add the following to your $PATH:

/the/path/on/my/system/sitetools

Here's an example of how you may do that in a ~/.bash_profile file:

export PATH=$PATH:/Applications/MAMP/bin/apache2/bin:/opt/local/bin:/opt/subversion/bin:/usr/local/bin/sitetools

2) Copy the executable for each tool to a common bin directory such as /usr/local/bin for easy access.

cp /the/path/on/my/system/sitetools/sitediff.pl /usr/local/bin
cp /the/path/on/my/system/sitetools/sitepet.sh /usr/local/bin
cp /the/path/on/my/system/sitetools/sitesync.pl /usr/local/bin

Either way, make sure the execution bits are set. It is recommended that 
permissions only be open and set for the user because of the sensitive 
password information that can be set in the script. Typically, this would 
be done by issueing the following command:

> chmod 700 sitediff.pl

Basic Setup
===========

-------------------------
sitediff.pl & sitesync.pl
-------------------------

    Next you will need to setup the ftp account information where you
website resides. This is necessary so the program can connect to it and 
download the files to perform the diffs. Below are the lines to modify:

my $opt_ip			= 'IP';
my $opt_user		= 'LOGIN';
my $opt_password	= 'PASSWORD';

If you would rather not hard code these values into the script, these parameters 
can also be passed in via the command-line using the -i, -u, and -p options
provided. But be aware of the security implication of doing this as anyone 
on the system can run the ps command and see those sensitive values 
being passed in as the process runs.

    The next sections indicate where various things are located on you local
system. Set $local_dir_root to the path of your htdocs root directory that
typically house all of your sites:

# LOCAL SERVER'S ROOT DOCUMENT DIRECTORY
my $local_dir_root      = "/Applications/MAMP/htdocs";

Next set the path to the site you want to use: 

# LOCAL SERVER'S ROOT DIRECTORY FOR SITE
my  $local_dir          = $local_dir_root . "/mysite.com/html";

    The next section may also require modifying, depending on how your
ftpsite is setup and your preferences. If you do not get dumped
into the htdocs root upon login to your ftp site, then modify the section by 
putting in the path to the htdocs root upon login.

my  $remote_dir_root    = "";

Pre-requisites
==============
    Perl
    Net::FTP
	File::Find::Rule;
	File::Find::Rule::VCS();

    You will need perl on your system to run this script. This script
is written so that it searches your environment to find the right path
to that software. You will also need the Net::FTP perl module installed properly
on your local system. Check out CPAN for this to get the software.


----------
sitepet.sh
----------

FTP_IP='IP';
FTP_LOGIN='LOGIN';
FTP_PASSWORD='PASSWORD';

If you would rather not hard code these values into the script, these parameters 
can also be passed in via the command-line using the -i, -u, and -p options
provided. But be aware of the security implication of doing this as anyone 
on the system can run the ps command and see those sensitive values 
being passed in as the process runs.

    The next sections may also require modifications, depending on how your
ftpsite is setup and your preferences. If you would like the file this process
appends to to go somewhere else besides the site root or you do not get dumped
into the htdocs root upon login, then modify the section below as specified.

REMOTE_DIR_ROOT=''; 

If you would like the temporary files this process creates and uses to go
somewhere else on your local system then change the specified directory below:

TMP_DIR='/tmp';

If you would like the name of the file the process will be appending to to be
named something different, then change the name below: 
(BE CAREFUL THOUGH. A NAME CHANGE WILL ALWAYS START A NEW FILE FROM SCRATCH
WHICH WILL LEAVE THE OLD FILES JUST HANGING AROUND AND WILL NO LONGER BE APPENDED 
TO)

FILE='sitepet.log';


Pre-requisites
==============

    You will need bash on your system to run this script. This script
is written so that it searches your environment to find the right path
to that software. You will also need an ftp client installed on your local 
system. The script also searches for the path to the 'ftp' software and uses
it to transfer the file the process appends to.

